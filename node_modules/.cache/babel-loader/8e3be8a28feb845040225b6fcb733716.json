{"ast":null,"code":"var _jsxFileName = \"/Users/hminshen/Downloads/IOT Materials/React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SensorData from \"./Components/SensorData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverName = \"http://192.168.1.20\";\n\nfunction App() {\n  _s();\n\n  const [sensorData, setSensorData] = useState({\n    temperature: 0,\n    heartrate: 0,\n    humidity: 0\n  });\n  const [LED, setLED] = useState(false);\n\n  const toggleLED = () => {\n    setLED(prevState => {\n      return !prevState;\n    });\n    fetch(serverName + \":5000/toggle\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        state: LED\n      })\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch(serverName + \":5000/data\").then(response => response.json().then(data => {\n        setSensorData(data);\n      }));\n    }, 750);\n    return () => clearInterval(interval);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Escendo 2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"clabel\",\n      children: \"Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors\",\n      children: [/*#__PURE__*/_jsxDEV(SensorData, {\n        name: \"Temperature\",\n        data: sensorData.temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SensorData, {\n        name: \"Heartrate\",\n        data: sensorData.heartrate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SensorData, {\n        name: \"Humidity\",\n        data: sensorData.humidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"clabel\",\n      children: \"Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLED,\n        children: \"Toggle LED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mqDsJtJFDnhnHPsBt2/mWB+WEI8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hminshen/Downloads/IOT Materials/React/src/App.js"],"names":["useEffect","useState","SensorData","serverName","App","sensorData","setSensorData","temperature","heartrate","humidity","LED","setLED","toggleLED","prevState","fetch","method","headers","Accept","body","JSON","stringify","state","interval","setInterval","then","response","json","data","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,UAAU,GAAG,qBAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC;AAC3CM,IAAAA,WAAW,EAAE,CAD8B;AAE3CC,IAAAA,SAAS,EAAE,CAFgC;AAG3CC,IAAAA,QAAQ,EAAE;AAHiC,GAAD,CAA5C;AAMA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,KAAD,CAA9B;;AAEA,QAAMW,SAAS,GAAG,MAAM;AACtBD,IAAAA,MAAM,CAAEE,SAAD,IAAe;AACpB,aAAO,CAACA,SAAR;AACD,KAFK,CAAN;AAIAC,IAAAA,KAAK,CAACX,UAAU,GAAG,cAAd,EAA8B;AACjCY,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEX;AADY,OAAf;AAN2B,KAA9B,CAAL;AAUD,GAfD;;AAiBAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCT,MAAAA,KAAK,CAACX,UAAU,GAAG,YAAd,CAAL,CAAiCqB,IAAjC,CAAuCC,QAAD,IACpCA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAD,IAAU;AAC7BrB,QAAAA,aAAa,CAACqB,IAAD,CAAb;AACD,OAFD,CADF;AAKD,KAN2B,EAMzB,GANyB,CAA5B;AAOA,WAAO,MAAMC,aAAa,CAACN,QAAD,CAA1B;AACD,GATQ,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,aAAjB;AAA+B,QAAA,IAAI,EAAEjB,UAAU,CAACE;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAEF,UAAU,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAEH,UAAU,CAACI;AAA7C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApDQR,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SensorData from \"./Components/SensorData.js\";\n\nconst serverName = \"http://192.168.1.20\";\n\nfunction App() {\n  const [sensorData, setSensorData] = useState({\n    temperature: 0,\n    heartrate: 0,\n    humidity: 0,\n  });\n\n  const [LED, setLED] = useState(false);\n\n  const toggleLED = () => {\n    setLED((prevState) => {\n      return !prevState;\n    });\n\n    fetch(serverName + \":5000/toggle\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        state: LED,\n      }),\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch(serverName + \":5000/data\").then((response) =>\n        response.json().then((data) => {\n          setSensorData(data);\n        })\n      );\n    }, 750);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">Escendo 2022</div>\n      <label className=\"clabel\">Sensor Data</label>\n      <div className=\"sensors\">\n        <SensorData name=\"Temperature\" data={sensorData.temperature} />\n        <SensorData name=\"Heartrate\" data={sensorData.heartrate} />\n        <SensorData name=\"Humidity\" data={sensorData.humidity} />\n      </div>\n      <label className=\"clabel\">Control Panel</label>\n      <div className=\"control\">\n        <button onClick={toggleLED}>Toggle LED</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}